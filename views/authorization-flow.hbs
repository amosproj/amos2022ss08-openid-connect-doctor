 <html>
<head>
    <meta charset="utf-8" />
    <title>Authorization-Code-Flow</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
</head>
<body>
    <nav class="navbar">
        <div class="container">
            <div class="navbar-item">
                <a class="btn btn-outline-secondary" href="/api/discovery/issuer" role="button">Back to Discovery</a>
            </div>
            <div class="navbar-item mx-auto">
                <a class="btn btn-outline-secondary" href="/api/protocol/logger" role="button">Protocol</a>
            </div>
        </div>
    </nav>
<div class="container">
    <div class="input-container">
        <h2>Authorization-Code-Flow</h2>
        <p>Please enter the necessary information:</p>
        <form class="input-form">
            <div class="row mb-3">
                <label class="col-sm-2 col-form-label" for="clientId">Client-ID</label>
                <input type="text" id="clientId" class="col-sm-10" name="clientId" aria-label="Client-Id input"  placeholder="Input your client-id here" aria-placeholder="Input your client-id here"/>
            </div>
            <div class="row mb-3">
                <label class="col-sm-2 col-form-label" for="clientSecret">Client-Secret</label>
                <input type="password" id="clientSecret" class="col-sm-10" name="clientSecret" aria-label="Client-Secret input"  placeholder="Input your client-secret here" aria-placeholder="Input your client-secret here"/>
            </div>
            <div class="row mb-3">
                <label class="col-sm-2 col-form-label" for="redirectUri">Custom URI</label>
                <input type="text" id="customUri" class="col-sm-10" name="customUri" aria-label="custom-URI input"  placeholder="Input your custom URI here" aria-placeholder="Input your custom URI here"/>
            </div>
            <div class="d-grid">
                <button class="btn btn-outline-dark" onclick="login()" type="button">Submit</button>
            </div>
        </form>
    </div>
    <div>
        <p id="demo"></p>
    </div>
</div>
<script type="text/javascript">
    function login() {
        const authIssuer = "http://localhost:8080/realms/myrealm/protocol/openid-connect/auth";
        const client_id = document.getElementById("clientId").value;
        const client_secret = document.getElementById("clientSecret").value;
        const customUri = document.getElementById("customUri").value;
        const callback_uri = "http://localhost:8081/api/flows/callback"
        const responseType = "code";
        const state = randomString(10);

        let popUpWindow = authURL(authIssuer, client_id, client_secret, callback_uri, responseType, state)
        let myURL = extractURL(popUpWindow);

        let interval = setInterval(() => {
            console.log('.....')
            if (myURL.includes('code')) {
                clearInterval(interval);
                const response = fetch('authorize', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({
                        clientId: client_id,
                        clientSecret: client_secret,
                        url: myURL,
                        redirectUri: callback_uri,
                        }),
                        redirect: 'follow'
                    }).then((response) => response.json()) //2
                        .then((result) => {
                            console.log(result); //3
                            document.getElementById("demo").innerHTML =result.discoveryResult;
                        });
                      /*  let result = res.json();
                        popUpWindow.close();
                        alert(result);
                        console.log("####");
                        console.log(result);*/
                        /*window.location.href = 'http://localhost:8081/api/flows/authResult?discoveryResult=' +
                        JSON.stringify(result.discoveryResult) + '&header=' + JSON.stringify(result.header) +
                        '&message=' & JSON.stringify(result.message) + '&payload=' +
                        JSON.stringify(result.payload) + '&showResults=' + result.showResults*/
                    //window.location.href = redirect_uri;
                    //console.log(response);
            } else {
                myURL = extractURL(popUpWindow);
                console.log("In else block")
            }
        }, 1000);
    }

    function extractURL(window) {
        return window.location.href;
    }

    function authURL(authIssuer, clientId, clientSecret, redirectUri, responseType, state) {
        return window.open(authIssuer +
                '?client_id=' +
                clientId +
                '&client_secret=' +
                clientSecret +
                '&response_type=' +
                responseType +
                '&redirect_uri=' +
                redirectUri +
                '&state=' +
                state +
                '&prompt=consent&scope=openid');
    }

    function randomString(length) {
        let chars = '0123456789abcdefghijklmnopqrstuvwxyz';
        let result = '';
        for (let i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];
        return result;
    }
</script>
</body>
</html>