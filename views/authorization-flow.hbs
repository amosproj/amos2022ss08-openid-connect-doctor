<html>
<head>
    <meta charset="utf-8" />
    <title>Client-Credential-Flow</title>

    <style>
        .container {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;

            margin: 3px;
            padding: 10px;
            border: 2px solid black;
            border-radius: 3px 2px;
        }
        .input-container {
            margin:3px;
            padding: 10px;
            border: 2px solid black;
            border-radius: 3px 2px;
        }
        .input-form {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
        }
        .input-group {
            display: inline-flex;
            padding: 10px;
        }
        .input-group > label {
            flex: 25%;
        }

        .input-group > input,
        .input-group > select,
        .input-group > .input-container,
        .input-group > textarea {
            flex: 75%;
        }
        .multi-input-group {
            display: inline-flex;
            padding: 10px;
        }
        .multi-input-group > label {
            flex: 15%;
        }

        .multi-input-group > input,
        .multi-input-group > select,
        .multi-input-group > textarea {
            flex: 35%;
            margin-right: 10px;
        }
        .button-group {
            display: inline-flex;
        }
        .reset-button,
        .submit-button {
            flex: 45%;
            padding: 5px;
            margin: 5px;
            color: #000;
            background-color: #e4e4e4;
            border: 2px solid #000;
            border-radius: 3px 2px;
        }
        .reset-button:hover,
        .reset-button:focus {
            color: #a11;
            border: 2px solid #a11;
        }

        .submit-button:hover,
        .submit-button:focus {
            color: #1a1;
            border: 2px solid #1a1;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="input-container">
        <h2>Client-Credential-Flow</h2>
        <a href="/api/discovery/issuer">Go back to Discovery</a>
        <p>Please enter the necessary information:</p>
        <form class="input-form">
            <div class="input-group">
                <label for="authIssuer"><b>Issuer: </b></label>
                <input type="text" id="authIssuer" name="authIssuer" />
            </div>
            <div class="input-group">
                <label for="clientId"><b>Client-ID: </b></label>
                <input type="text" id="clientId" name="clientId" />
            </div>
            <div class="input-group">
                <label for="clientSecret"><b>Client-Secret: </b></label>
                <input type="password" id="clientSecret" name="clientSecret" />
            </div>
            <div class="input-group">
                <label for="responseType"><b>Response-Type: </b></label>
                <input type="text" id="responseType" name="responseType" />
            </div>
            <div class="input-group">
                <label for="redirectUri"><b>Redirect URI: </b></label>
                <input type="text" id="redirectUri" name="redirectUri" />
            </div>
            <div class="input-group">
                <label for="state"><b>State: </b></label>
                <input type="text" id="state" name="state" />
            </div>
            <button id="submit" onclick="checkUrl()" type="submit"  value="submit" >Submit</button>
        </form>
    </div>
</div>
<script type="text/javascript">
    function checkUrl() {
        console.log("###################");
        console.log("Hello Login");
        extractURL();
        /*
        Pop up window getting loaded a little late, because of this the url fetches about:blank which causes error, this can be fixed by fetching the URL after the popup load is successful
        The below code needs to run oly after the above popUpWindow is completely loaded*/

    }
    function loadPopUpWindow() {
        return new Promise((resolve, reject) => {
            let authIssuer = document.getElementById("authIssuer").value;
            let client_id = document.getElementById("clientId").value;
            let client_secret = document.getElementById("clientSecret").value;
            let response_type = document.getElementById("responseType").value;
            let redirect_uri = document.getElementById("redirectUri").value;
            let state = document.getElementById("state").value;
            let popupWindow = window.open(authURL(authIssuer, client_id, client_secret, response_type, redirect_uri, state),
                    'popUpWindow', 'height=300,width=700,left=50,top=50,resizable=yes,' +
                    'scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes');
           resolve(popupWindow);
        });
    }
    async function extractURL() {
        console.log('Before promise call.')
        //3. Await for the first function to complete
        const result = await loadPopUpWindow();
        console.log('Promise resolved: ');
        console.log('Next step.')
        let myURL = result.location.href;

        let myParameters = myURL.split("?")[1]
        console.log(result.location.href);
        console.log(JSON.parse('{"' + myParameters.replace(/&/g, '","').replace(/=/g, '":"') + '"}', function (key, value) {
            return key === "" ? value : decodeURIComponent(value)
        }));

        let data = {
            clientId: client_id,
            clientSecret: client_secret,
            code: myParameters.code,
            redirectUri: redirect_uri,
        };

        fetch("/api/flows/auth", {
            method: "POST",
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(data)
        }).then(res => {
            console.log("Request complete! response:", res);
        });

    };

    function authURL(authIssuer, clientId, clientSecret, responseType, redirectUri, state) {
        return authIssuer +
                '?client_id=' +
                clientId +
                '&client_secret=' +
                clientSecret +
                '&response_type=' +
                responseType +
                '&redirect_uri=' +
                redirectUri +
                '&state=' +
                state +
                '&prompt=consent&scope=openid';
    }
</script>
</body>
</html>